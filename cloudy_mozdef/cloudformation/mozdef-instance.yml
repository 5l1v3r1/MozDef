AWSTemplateFormatVersion: "2010-09-09"
Description: Deploy MozDef autoscaled ec2 instance group and ALB into AWS
Parameters:
  VpcId:
    Type: "AWS::EC2::VPC::Id"
    Description: "The VPC ID of the VPC to deploy in"
    Default: "vpc-dc8eacb4"
  InstanceType:
    Type: "String"
    Default: "m5.large"
    Description: "EC2 instance type, e.g. m1.small, m1.large, etc."
  KeyName:
    Type: "AWS::EC2::KeyPair::KeyName"
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the web server"
    Default: "infosec-pdx-workweek-2018"
  IamInstanceProfile:
    Type: "String"
    Description: "The ARN of the IAM Instance Profile"
    Default: "arn:aws:iam::656532927350:instance-profile/netsecdevbastion-BastionInstanceProfile-12CM3TOELV20R"
  AutoScaleGroupSubnetIds:
    Type: "List<AWS::EC2::Subnet::Id>"
    Description: "A comma delimited list of subnet IDs"
    Default: "subnet-dd8eacb5,subnet-df8eacb7,subnet-de8eacb6"
  AMIImageId:
    Type: "String"
    Description: "The AMI Image ID to use of the EC2 instance"
    Default: "ami-0e7bda6769c8b3854"
  MozDefSecurityGroupId:
    Type: "String"
    Description: "The security group to apply to the EC2 instance"
  MozDefLoadBalancerSecurityGroupId:
    Type: "String"
    Description: "The security group to apply to the EC2 instance"
  MozDefACMCertArn:
    Type: "String"
    Description: "The arn of your pre-issued certificate for ssl termination."
Resources:
  MozDefElasticLoadBalancingV2TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 443
      Protocol: HTTP
      Tags:
        - Key: application
          Value: mozdef
      VpcId: !Ref VpcId
  MozDefLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: true
      IamInstanceProfile: !Ref IamInstanceProfile
      ImageId: !Ref AMIImageId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref MozDefSecurityGroupId
      # UserData: xxx
  MozDefAutoScaleGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: 1
      LaunchConfigurationName: !Ref MozDefLaunchConfiguration
      MaxSize: 1
      MinSize: 1
      Tags:
        - Key: Name
          Value: mozdef
          PropagateAtLaunch: true
        - Key: application
          Value: mozdef
          PropagateAtLaunch: true
      TargetGroupARNs: !GetAtt MozDefElasticLoadBalancingV2TargetGroup.LoadBalancerArns
      VPCZoneIdentifier: !Ref AutoScaleGroupSubnetIds
  MozDefElasticLoadBalancingV2LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - !Ref MozDefLoadBalancerSecurityGroupId
      Subnets: !Ref AutoScaleGroupSubnetIds
      Tags:
        - Key: application
          Value: mozdef
  MozDefElasticLoadBalancingV2ListenerHttps:
    Type : AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn: !Ref MozDefACMCertArn
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: MozDefElasticLoadBalancingV2TargetGroup
      LoadBalancerArn:
        Ref: MozDefElasticLoadBalancingV2LoadBalancer
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-2016-08
  MozDefElasticLoadBalancingV2ListenerHttp:
    Type : AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: MozDefElasticLoadBalancingV2TargetGroup
      LoadBalancerArn:
        Ref: MozDefElasticLoadBalancingV2LoadBalancer
      Port: 80
      Protocol: HTTP
